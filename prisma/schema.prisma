datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

model User {
  id        String   @id @default(uuid()) @unique
  login     String
  password  String
  version   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id      String  @id @default(uuid()) @unique
  name    String
  grammy  Boolean
  tracks  Track[]
  albums  Album[]
  favorites FavoriteArtist[]
}

model Track {
  id        String  @id @default(uuid()) @unique
  name      String
  artistId  String?
  albumId   String?
  duration  Int
  favorites FavoriteTrack[]

  artist    Artist? @relation(fields: [artistId], references: [id])
  album     Album?  @relation(fields: [albumId], references: [id])
}

model Album {
  id        String  @id @default(uuid()) @unique
  name      String
  year      Int
  artistId  String?
  tracks    Track[]
  favorites FavoriteAlbum[]

  artist    Artist? @relation(fields: [artistId], references: [id])
}

model FavoriteArtist {
  id        String  @id @default(uuid()) @unique
  artistId  String

  artist    Artist  @relation(fields: [artistId], references: [id])
}

model FavoriteTrack {
  id      String  @id @default(uuid()) @unique
  trackId String

  track   Track   @relation(fields: [trackId], references: [id])
}

model FavoriteAlbum {
  id      String  @id @default(uuid()) @unique
  albumId String

  album   Album   @relation(fields: [albumId], references: [id])
}
